// SPDX-License-Identifier: GPL-3.0

pragma solidity >=0.8.2 <0.9.0;


contract Q3{
    struct student{
        uint number;
        string name;
        uint score;
    }
    student[] students;


    function addStudent(uint _number, string memory _name, uint _score) public {
        students.push(student(_number, _name, _score));
    }

    /*가장 점수가 낮은 사람의 정보를 보여주는 기능,*/
    function getLowScore(uint _score) public view returns(uint){
        for(uint i = 1; i < students.length; i++){
            if(students[i].score < LowScore){
                Low = students[i].score;
            }
        }
    }

    /*총 점수 합계, 총 점수 평균을 보여주는 기능*/
    function getSumAndAverageScore() public view returns(uint, uint){
        uint sum;
        for(uint i = 0; i < student.length; i++){
            sum += studetns[i].score;
        }
    }


/*특정 학생을 반환하는 기능, -> 숫자로 반환*/



    /*가능하다면 학생 전체를 반환하는 기능을 구현하세요. ([] <- array)*/
    function getStudent() public view returns(students[] memory){
        return students;
    }
}
